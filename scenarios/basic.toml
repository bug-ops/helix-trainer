# Basic Helix Keybindings Training Scenarios
# These scenarios cover fundamental Helix editor operations

[[scenarios]]
id = "delete_line_001"
name = "Delete current line"
description = "Delete the current line where the cursor is located. In Helix, 'd' is the delete operator."

[scenarios.setup]
file_content = "first line\nsecond line\nthird line"
cursor_position = [0, 0]

[scenarios.target]
file_content = "first line\nthird line"
cursor_position = [1, 0]

[scenarios.solution]
commands = ["d", "d"]
description = "Press 'd' twice: first 'd' activates delete mode, second 'd' targets the current line"

hints = [
    "In Helix (like Vim), 'd' is a modal operator that needs a motion target",
    "When you press 'd' twice, the second 'd' means 'delete this line'",
]

[[scenarios.alternatives]]
commands = ["c", "c"]
points_multiplier = 0.8
description = "Alternative: Use 'cc' (change line)"

[scenarios.scoring]
optimal_count = 2
max_points = 100
tolerance = 1

[[scenarios]]
id = "select_word_001"
name = "Select current word"
description = "Select the word under the cursor"

[scenarios.setup]
file_content = "The quick brown fox"
cursor_position = [0, 4]

[scenarios.target]
file_content = "The quick brown fox"
cursor_position = [0, 4]
selection = [0, 4, 0, 9]             # Select "quick" (from col 4 to col 9)

[scenarios.solution]
commands = ["e"]
description = "Press 'e' to select to the end of the current word"

hints = [
    "In Helix, 'e' extends selection to the end of the word",
    "After selecting, you can delete with 'd', change with 'c', etc.",
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "append_mode_001"
name = "Append after word"
description = "Move to end of word and enter insert mode to append text"

[scenarios.setup]
file_content = "hello world"
cursor_position = [0, 0]

[scenarios.target]
file_content = "hello! world"
cursor_position = [0, 6]

[scenarios.solution]
commands = ["e", "a", "!", "Escape"]
description = "Press 'e' to move to end of word, 'a' to append, '!' to insert, Escape to exit insert mode"

hints = [
    "'a' enters insert mode after the cursor position",
    "Don't forget to press Escape to exit insert mode",
]

[scenarios.scoring]
optimal_count = 4
max_points = 100
tolerance = 1

[[scenarios]]
id = "open_below_001"
name = "Insert line below"
description = "Open a new line below the current line"

[scenarios.setup]
file_content = "function main() {\n}"
cursor_position = [0, 0]

[scenarios.target]
file_content = "function main() {\n\n}"
cursor_position = [1, 0]

[scenarios.solution]
commands = ["o"]
description = "Press 'o' to open a new line below"

hints = ["'o' inserts a new line below and enters insert mode"]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "open_above_001"
name = "Insert line above"
description = "Open a new line above the current line"

[scenarios.setup]
file_content = "line1\nline2\nline3"
cursor_position = [1, 0]

[scenarios.target]
file_content = "line1\n\nline2\nline3"
cursor_position = [1, 0]

[scenarios.solution]
commands = ["O"]
description = "Press 'O' (capital o) to open a new line above"

hints = ["'O' inserts a new line above and enters insert mode"]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "replace_char_001"
name = "Fix typo with replace"
description = "Replace a single character to fix a typo"

[scenarios.setup]
file_content = "Hxllo world"
cursor_position = [0, 1]

[scenarios.target]
file_content = "Hello world"
cursor_position = [0, 1]

[scenarios.solution]
commands = ["re"]
description = "Press 'r' then 'e' to replace 'x' with 'e'"

hints = [
    "'r' followed by any character replaces the character under cursor",
    "Unlike 'i', replace doesn't enter insert mode",
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "insert_line_start_001"
name = "Insert at line start"
description = "Move to start of line and enter insert mode"

[scenarios.setup]
file_content = "  indented text"
cursor_position = [0, 5]

[scenarios.target]
file_content = "#  indented text"
cursor_position = [0, 1]

[scenarios.solution]
commands = ["I", "#", "Escape"]
description = "Press 'I' to move to start, '#' to insert, Escape to exit"

hints = [
    "'I' is like 'i' but moves to the start of the line first",
    "Don't forget to press Escape to exit insert mode",
]

[scenarios.scoring]
optimal_count = 3
max_points = 100
tolerance = 1

[[scenarios]]
id = "append_line_end_001"
name = "Append at line end"
description = "Move to end of line and enter insert mode"

[scenarios.setup]
file_content = "hello"
cursor_position = [0, 0]

[scenarios.target]
file_content = "hello!"
cursor_position = [0, 6]

[scenarios.solution]
commands = ["A", "!", "Escape"]
description = "Press 'A' to move to end, '!' to insert, Escape to exit"

hints = [
    "'A' is like 'a' but moves to the end of the line first",
    "Don't forget to press Escape to exit insert mode",
]

[scenarios.scoring]
optimal_count = 3
max_points = 100
tolerance = 1

[[scenarios]]
id = "change_selection_001"
name = "Change character"
description = "Delete character under cursor and enter insert mode"

[scenarios.setup]
file_content = "test"
cursor_position = [0, 0]

[scenarios.target]
file_content = "best"
cursor_position = [0, 1]

[scenarios.solution]
commands = ["c", "b", "Escape"]
description = "Press 'c' to delete and enter insert mode, 'b' to insert, Escape to exit"

hints = [
    "'c' deletes the selection and enters insert mode",
    "It's like 'x' followed by 'i'",
    "Don't forget to press Escape to exit insert mode",
]

[scenarios.scoring]
optimal_count = 3
max_points = 100
tolerance = 1

[[scenarios]]
id = "yank_paste_001"
name = "Copy and paste character"
description = "Yank (copy) a character and paste it elsewhere"

[scenarios.setup]
file_content = "abc"
cursor_position = [0, 0]

[scenarios.target]
file_content = "abac"
cursor_position = [0, 3]

[scenarios.solution]
commands = ["y", "l", "p"]
description = "Press 'y' to yank 'a', 'l' to move right, 'p' to paste after"

hints = [
    "'y' yanks (copies) the current selection",
    "'p' pastes after the cursor",
]

[scenarios.scoring]
optimal_count = 3
max_points = 100
tolerance = 1

[[scenarios]]
id = "paste_before_001"
name = "Paste before cursor"
description = "Yank a character and paste it before cursor position"

[scenarios.setup]
file_content = "xyz"
cursor_position = [0, 2]

[scenarios.target]
file_content = "xzyz"
cursor_position = [0, 1]

[scenarios.solution]
commands = ["y", "h", "P"]
description = "Press 'y' to yank 'z', 'h' to move left, 'P' to paste before"

hints = [
    "'y' yanks the current selection",
    "'P' (capital P) pastes before the cursor",
]

[scenarios.scoring]
optimal_count = 3
max_points = 100
tolerance = 1


[[scenarios]]
id = "join_lines_001"
name = "Join two lines"
description = "Join the current line with the line below"

[scenarios.setup]
file_content = "Hello\nWorld"
cursor_position = [0, 0]

[scenarios.target]
file_content = "Hello World"
cursor_position = [0, 0]

[scenarios.solution]
commands = ["J"]
description = "Press 'J' to join lines"

hints = [
    "'J' joins the current line with the next line",
    "A space is automatically added between the joined lines",
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "indent_line_001"
name = "Indent code line"
description = "Add indentation to a line of code"

[scenarios.setup]
file_content = """function hello() {
return 42;
}"""
cursor_position = [1, 0]

[scenarios.target]
file_content = """function hello() {
  return 42;
}"""
cursor_position = [1, 2]

[scenarios.solution]
commands = [">"]
description = "Press '>' to indent the line"

hints = [
    "'>' adds 2 spaces of indentation at the start of the line",
    "Use multiple times to add more indentation"
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "dedent_line_001"
name = "Remove indentation"
description = "Remove indentation from a line"

[scenarios.setup]
file_content = """function hello() {
    return 42;
}"""
cursor_position = [1, 0]

[scenarios.target]
file_content = """function hello() {
  return 42;
}"""
cursor_position = [1, 0]

[scenarios.solution]
commands = ["<"]
description = "Press '<' to remove indentation"

hints = [
    "'<' removes up to 2 spaces of indentation from the start of the line",
    "Use multiple times to remove more indentation"
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "word_movement_001"
name = "Navigate by words"
description = "Move cursor forward through words to reach the target position"

[scenarios.setup]
file_content = "The quick brown fox jumps"
cursor_position = [0, 0]

[scenarios.target]
file_content = "The quick brown fox jumps"
cursor_position = [0, 16]

[scenarios.solution]
commands = ["w", "w", "w"]
description = "Press 'w' three times to move forward by words"

hints = [
    "'w' moves to the start of the next word",
    "'b' moves backwards to the start of the previous word",
    "'e' moves to the end of the current/next word",
]

[scenarios.scoring]
optimal_count = 3
max_points = 100
tolerance = 1

[[scenarios]]
id = "line_navigation_001"
name = "Jump to line end"
description = "Navigate from line start to line end"

[scenarios.setup]
file_content = "Start of the line content here"
cursor_position = [0, 0]

[scenarios.target]
file_content = "Start of the line content here"
cursor_position = [0, 30]

[scenarios.solution]
commands = ["$"]
description = "Press '$' to jump to end of line"

hints = [
    "'$' jumps to the end of the current line",
    "'0' jumps to the start of the line",
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "line_start_001"
name = "Jump to line start"
description = "Navigate from line end to line start"

[scenarios.setup]
file_content = "This is a line of text"
cursor_position = [0, 15]

[scenarios.target]
file_content = "This is a line of text"
cursor_position = [0, 0]

[scenarios.solution]
commands = ["0"]
description = "Press '0' to jump to start of line"

hints = [
    "'0' jumps to the start of the current line",
    "'$' jumps to the end of the line",
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "document_navigation_001"
name = "Jump to document start"
description = "Navigate to the beginning of the document"

[scenarios.setup]
file_content = """Line 1
Line 2
Line 3
Line 4
Line 5"""
cursor_position = [4, 0]

[scenarios.target]
file_content = """Line 1
Line 2
Line 3
Line 4
Line 5"""
cursor_position = [0, 0]

[scenarios.solution]
commands = ["g", "g"]
description = "Press 'gg' to jump to document start"

hints = [
    "'gg' jumps to the first line of the document",
    "'G' jumps to the last line of the document",
]

[scenarios.scoring]
optimal_count = 2
max_points = 100
tolerance = 1

[[scenarios]]
id = "document_end_001"
name = "Jump to document end"
description = "Navigate to the end of the document"

[scenarios.setup]
file_content = """First line
Second line
Third line
Fourth line
Last line"""
cursor_position = [0, 0]

[scenarios.target]
file_content = """First line
Second line
Third line
Fourth line
Last line"""
cursor_position = [4, 0]

[scenarios.solution]
commands = ["G"]
description = "Press 'G' to jump to document end"

hints = [
    "'G' jumps to the last line of the document",
    "'gg' jumps to the first line",
]

[scenarios.scoring]
optimal_count = 1
max_points = 100
tolerance = 0

[[scenarios]]
id = "undo_redo_001"
name = "Undo and redo changes"
description = "Delete a line, undo it, then redo the deletion"

[scenarios.setup]
file_content = """Keep this
Delete this
Keep this too"""
cursor_position = [1, 0]

[scenarios.target]
file_content = """Keep this
Keep this too"""
cursor_position = [1, 0]

[scenarios.solution]
commands = ["d", "d", "u", "U"]
description = "Press 'dd' to delete, 'u' to undo, 'U' to redo"

hints = [
    "'u' undoes the last change",
    "'U' redoes the undone change (like Ctrl-R in Vim)",
    "Practice undo/redo to recover from mistakes",
]

[scenarios.scoring]
optimal_count = 4
max_points = 100
tolerance = 2
